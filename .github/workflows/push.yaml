name: Go Build and Test

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23' 
        
    - name: Build
      run: go build -v ./...
      working-directory: ./backend
      
    - name: Test
      run: |
        go test -v ./... -json > test-report.json
      working-directory: ./backend  
        
    - name: Display test results
      if: always()
      run: |
        echo "### Test Summary" >> $GITHUB_STEP_SUMMARY
        
        # Count total tests and failures
        TOTAL=$(cat test-report.json | jq -r 'select(.Action == "pass" or .Action == "fail") | .Test' | wc -l)
        FAILED=$(cat test-report.json | jq -r 'select(.Action == "fail") | .Test' | wc -l)
        PASSED=$((TOTAL - FAILED))
        
        echo "**$PASSED** tests passed" >> $GITHUB_STEP_SUMMARY
        
        # Only show failures if they exist
        if [ "$FAILED" -gt "0" ]; then
          echo "**$FAILED** tests failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Failed Tests" >> $GITHUB_STEP_SUMMARY
          
          # List just the failed tests with their package name
          cat test-report.json | jq -r 'select(.Action == "fail") | 
            "- **\(.Package)**: \(.Test // "package test")"' >> $GITHUB_STEP_SUMMARY
          
          # Add first failure detail with output
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Error Details" >> $GITHUB_STEP_SUMMARY
          cat test-report.json | jq -r 'select(.Action == "fail") | limit(1;.) | 
            "```\n\(.Output)\n```"' >> $GITHUB_STEP_SUMMARY
        fi
      working-directory: ./backend